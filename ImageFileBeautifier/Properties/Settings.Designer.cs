//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18213
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ImageFileBeautifier.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "12.0.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Year")]
        public string YearFolderPrefix {
            get {
                return ((string)(this["YearFolderPrefix"]));
            }
            set {
                this["YearFolderPrefix"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Month of")]
        public string MonthFolderPrefix {
            get {
                return ((string)(this["MonthFolderPrefix"]));
            }
            set {
                this["MonthFolderPrefix"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0")]
        public int TodoWhenDuplicate {
            get {
                return ((int)(this["TodoWhenDuplicate"]));
            }
            set {
                this["TodoWhenDuplicate"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("MMMM dd, yyyy - hhmmss")]
        public string CurrentFileNamingFormat {
            get {
                return ((string)(this["CurrentFileNamingFormat"]));
            }
            set {
                this["CurrentFileNamingFormat"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<ArrayOfString xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
  <string>Mdy - hhmmss</string>
  <string>M/d/y - hhmmss</string>
  <string>MM/dd/yy - hhmmss</string>
  <string>MM/dd/yyyy - hhmmss</string>
  <string>MMM/dd/yyyy - hhmmss</string>
  <string>MMMM/dd/yyyy - hhmmss</string>
  <string>MMMM dd, yyyy - hhmmss</string>
  <string>dddd, MMMM dd, yyyy - hhmmss</string>
  <string>MMM dd, yyyy - hhmmss</string>
  <string>ddd, MMM dd, yyyy - hhmmss</string>
  <string>dMy - hhmmss</string>
  <string>d/M/y - hhmmss</string>
  <string>dd/MM/yy - hhmmss</string>
  <string>dd MMM, yy - hhmmss</string>
  <string>dd MMM, yyyy - hhmmss</string>
  <string>dd MMMM, yyyy - hhmmss</string>
</ArrayOfString>")]
        public global::System.Collections.Specialized.StringCollection FileNamingFormats {
            get {
                return ((global::System.Collections.Specialized.StringCollection)(this["FileNamingFormats"]));
            }
            set {
                this["FileNamingFormats"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool UseDateModified {
            get {
                return ((bool)(this["UseDateModified"]));
            }
            set {
                this["UseDateModified"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool IsTrial {
            get {
                return ((bool)(this["IsTrial"]));
            }
            set {
                this["IsTrial"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0")]
        public int RenamedPictureCounter {
            get {
                return ((int)(this["RenamedPictureCounter"]));
            }
            set {
                this["RenamedPictureCounter"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string MachineID {
            get {
                return ((string)(this["MachineID"]));
            }
            set {
                this["MachineID"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string LicenseID {
            get {
                return ((string)(this["LicenseID"]));
            }
            set {
                this["LicenseID"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool IncludeSubfolders {
            get {
                return ((bool)(this["IncludeSubfolders"]));
            }
            set {
                this["IncludeSubfolders"] = value;
            }
        }
    }
}
